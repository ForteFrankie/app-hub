openapi: 3.0.0
info:
  title: DHIS2 App Store API
  description: >-
    Optional multiline or single-line description in
    [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

servers:
  - url: 'http://api.example.com/v1'
    description: 'Optional server description, e.g. Main (production) server'
  - url: 'http://staging-api.example.com'
    description: 'Optional server description, e.g. Internal staging server for testing'

paths:
  /apps:
    get:
      summary: Returns a list of all approved apps
      description: A list of all approved apps.
      responses:
        '200':
          description: A JSON array of Apps
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApp'
                  
    post:
      summary: Upload app bundle
      description: Upload web app bundle
      responses:
        '200':
          description: Result view for request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
                
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /apps/all:
    get:
      summary: Returns a list of all apps
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':
          description: A JSON array of Apps
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApp'

  /apps/myapps:
    get:
      summary: Returns a list of apps the user has uploaded
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':
          description: A JSON array of Apps
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApp'

  /{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the WebApp
      schema:
        type: string
    put:
      summary: Update WebApp with ID
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/WebApp'
      responses:
        '200':
          description: Result view for request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'       
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Return WebApp with ID
      description: Return specific WebApp with and ID
      responses:
        '200':
          description: JSON representation of WebApp
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApp'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete WebApp with ID
      description: Delete specific WebApp
      responses:
        '200':
          description: Deleted WebApp
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /{id}/reviews:
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the WebApp
      schema:
        type: string
    
    get:
      summary: Return reviews for app with ID
      description: Reviews for application with ID
      responses:
        '200':
          description: JSON representation of reviews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Publish a review
      description: Publish a review about an app with ID
      responses:
        '200':
          description: Result view for request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
                
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /{id}/reviews/{reviewId}:
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the WebApp
      schema:
        type: string
    - name: reviewId
      in: path
      required: true
      description: The ID of the Review to update
      schema:
        type: string
    put:
      summary: Update Review for WebApp with ID
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '200':
          description: Result view for review update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
                
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Review with ID
      description: Delete specific Review
      responses:
        '200':
          description: Deleted review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /{id}/versions:
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the WebApp
      schema:
        type: string
    
    get:
      summary: Return versions for app with ID
      description: Versions for application with ID
      responses:
        '200':
          description: JSON representation of versions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Version'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Publish a version
      description: Publish a version for the WebApp with ID
      responses:
        '200':
          description: Result view for request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
                
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
                
  /{id}/versions/{versionId}:
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the WebApp
      schema:
        type: string
    - name: versionId
      in: path
      required: true
      description: The ID of the Version to update
      schema:
        type: string
    put:
      summary: Update Version for WebApp with ID
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Version'
      responses:
        '200':
          description: Result view for version update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
                
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Version with ID
      description: Delete specific Version
      responses:
        '200':
          description: Deleted Version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              

  /{id}/approval:
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the WebApp
      schema:
        type: string
    post:
      summary: Publish a version
      description: Publish a version for the WebApp with ID
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/AppStatus'
              
      responses:
        '200':
          description: Result view for request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
                
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /{id}/images:

    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the WebApp
      schema:
        type: string
    post:
      summary: Publish images for a WebApp
      description: Publish images for the WebApp with ID
      responses:
        '200':
          description: Result view for request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
                
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /{id}/images/{imageId}:
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the WebApp
      schema:
        type: string
    - name: imageId
      in: path
      required: true
      description: The ID of the Image to update
      schema:
        type: string
    put:
      summary: Update Image for WebApp with ID
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ImageResource'
      responses:
        '200':
          description: Result view for image update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResource'
                
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Image with ID
      description: Delete specific Image
      responses:
        '200':
          description: Deleted Image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
  
    Response:
      type: object
      required:
      - message
      - code
      properties:
        message:
          type: string
        code:
          type: integer
          minimum: 200
          maximum: 299
      example:
        message: success!
        code: 200
  
    Error:
      type: object
      required:
      - message
      - code
      properties:
        message:
          type: string
        code:
          type: integer
          minimum: 100
          maximum: 600
      example:
        message: not found
        code: 404
  
    Developer:
      type: object
      properties:
        name: 
          type: string
        organisation:
          type: string
        address:
          type: string
        email:
          type: string
      example:
        name: John Doe
        organisation: Does LTD.
        address: 123 Marker Avenue
        email: john@doe.tld
        
    WebApp:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        developer:
          $ref: '#/components/schemas/Developer'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
        versions:
          type: array
          items:
            $ref: '#/components/schemas/Version'
        appType:
          type: string
          $ref: '#/components/schemas/AppType'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageResource'
        status:
          type: string
          $ref: '#/components/schemas/AppStatus'
          
    Review:
      type: object
      properties:
        userId:
          type: string
        reviewText:
          type: string
        rate:
          type: integer
        
    Version:
      type: object
      properties:
        version:
          type: string
        minDhisVersion:
          type: string
        maxDhisVersion:
          type: string
        downloadUrl:
          type: string
        demoUrl:
          type: string
        app:
          $ref: '#/components/schemas/WebApp'
          
    AppType:
      type: string
      enum:
      - APP
      - DASHBOARD_WIDGET
      - TRACKER_DASHBOARD_WIDGET
      
    ImageResource:
      type: object
      properties:
        caption:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        logo:
          type: boolean
        app:
          $ref: '#/components/schemas/WebApp'

    AppStatus:
      type: string
      enum:
      - PENDING
      - NOT_APPROVED
      - APPROVED
      
    ResourceType:
      type: object
      properties:
        image:
          type: string
          enum:
          - jpg
          - jpeg
          - png
        zip:
          type: string
          enum:
          - zip
    
    